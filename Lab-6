import numpy as np
import pandas as pd
from sklearn.datasets import load_wine  # Use load_wine to load the Wine dataset
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neural_network import BernoulliRBM
from sklearn.pipeline import Pipeline
from sklearn.linear_model import LogisticRegression

# Load the Wine dataset
wine = load_wine()
X, y = wine['data'], wine['target']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Scale the data
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Define the RBM and Logistic Regression
rbm = BernoulliRBM(n_components=256, learning_rate=0.01, n_iter=20, verbose=1)

logistic = LogisticRegression(max_iter=1000)

# Create the pipeline
dbn_pipeline = Pipeline(steps=[('rbm', rbm), ('logistic', logistic)])

# Fit the model
dbn_pipeline.fit(X_train_scaled, y_train)

# Evaluate the model
dbn_score = dbn_pipeline.score(X_test_scaled, y_test)
print(f"DBN Classification score: {dbn_score}")
